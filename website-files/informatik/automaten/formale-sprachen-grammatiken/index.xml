<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Formale Sprachen Grammatiken on Informatikabitur</title>
    <link>/informatik/automaten/formale-sprachen-grammatiken.html</link>
    <description>Recent content in Formale Sprachen Grammatiken on Informatikabitur</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language><atom:link href="/informatik/automaten/formale-sprachen-grammatiken/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Syntax</title>
      <link>/informatik/automaten/formale-sprachen-grammatiken/syntax.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/informatik/automaten/formale-sprachen-grammatiken/syntax.html</guid>
      <description>Regelsystem zur Kombination elementarer Zeichen zu zusammengesetzten Zeichen, z.B.: Syntaxregeln einer Grammatik, etc.</description>
    </item>
    
    <item>
      <title>Formale Sprach</title>
      <link>/informatik/automaten/formale-sprachen-grammatiken/formale-sprach.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/informatik/automaten/formale-sprachen-grammatiken/formale-sprach.html</guid>
      <description>Eine Formale Sprache L über einem Alphabet Σ ist eine Teilmenge aller möglichen Verknüpfungen des Alphabets
Zusammenhang zwischen Automaten und Grammatiken Automaten können die Wörter einer Sprache erkennen. Grammatiken geben die Struktur der Wörter einer Sprache vor. Mittels Produktionsregeln lassen sich Wörter der Sprache erzeugen.</description>
    </item>
    
    <item>
      <title>Formale Grammatik</title>
      <link>/informatik/automaten/formale-sprachen-grammatiken/formale-grammatik.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/informatik/automaten/formale-sprachen-grammatiken/formale-grammatik.html</guid>
      <description>G = (N, T, P, S) N: nichtleere, endliche Menge von Nichtterminalen T: nichtleere, endliche Menge von Terminalen P: endliche Menge von Produktionsregeln (Jede Regel bildet eine beliebige Kombination aus T und N, die mindestens ein N enthält, auf eine beliebige Kombination von Terminalen und Nichtterminalen ab.) s∈N ist das Startsymbol Beispiel: L = {anbncn|n≥0}
G = (N, T, S, P) N = {S, S&amp;rsquo;, B} T = {a, b, c} S Startsymbol P = {</description>
    </item>
    
    <item>
      <title>Anwendung</title>
      <link>/informatik/automaten/formale-sprachen-grammatiken/anwendung.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/informatik/automaten/formale-sprachen-grammatiken/anwendung.html</guid>
      <description>Parser: kontextsensitive Grammatik Scanner: reguläre Grammatik Übersetzung von Quellcode in Maschinensprache Um einen Quellcode in eine Maschinensprache zu übersetzen, verwendet man einen Compiler, welcher mithilfe von verschiedenen Schritten mit speziellen Aufgaben, den Quelltext analysiert und umwandelt:
Scanner → lexikalische Analyse Parser → syntaktische Analyse semantische Analyse Codegenerator → Synthesepahse In der folgenden Section werden der Scanner (Schritt 1) und der Parser (Schritt 2) näher behandelt.
Scanner lexikalische (zeichenweise) Analyse des Quelltextes wird auch Lexer genannt bildet die Grundlage für den Parser Scanner zerlegt den Text in seine Bestandteile (Token) arbeitet nach den Regeln der regulüren Grammatik erkennt das Wort einer Sprache mithilfe eines DEAs erstellt eine Tokenliste (indizierte Liste aller Token mit Typen und Speicheradressen) Parser syntaktische Analyse des Quellcodes → Analyse der syntaktischen Korrektheit Scanner bildet die Grundlage für die semantische Analyse übernimmt sowohl die lexikalische als auch die syntaktische Analyse, wenn man bei der Worterkennung nicht zwischen den beiden unterscheidet erzeugt ein Ableitungsbaum Zusammenarbeit zwischen Scanner und Parser Scanner Parser können auf zwei Arten zusammenarbeiten:</description>
    </item>
    
  </channel>
</rss>
